[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "smart-pdf-toolkit"
version = "1.0.0"
description = "Comprehensive PDF processing and analysis toolkit"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Smart PDF Toolkit Team", email = "contact@smart-pdf-toolkit.com"}
]
maintainers = [
    {name = "Smart PDF Toolkit Team", email = "contact@smart-pdf-toolkit.com"}
]
keywords = [
    "pdf", "document", "processing", "analysis", "ocr", "ai", "toolkit",
    "merge", "split", "extract", "convert", "optimize", "security"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Text Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities"
]
requires-python = ">=3.8"
dependencies = [
    # Core dependencies
    "PyYAML>=6.0",
    "PyMuPDF>=1.23.0",
    "pdfplumber>=0.9.0",
    "pypdf>=3.0.0",
    
    # OCR dependencies
    "pytesseract>=0.3.10",
    "Pillow>=10.0.0",
    "langdetect>=1.0.9",
    
    # API dependencies
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "pydantic-settings>=2.0.0",
    "psutil>=5.9.0",
    
    # CLI dependencies
    "click>=8.1.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    
    # AI/ML dependencies
    "openai>=1.0.0",
    "transformers>=4.30.0",
    
    # Office document conversion
    "python-docx>=0.8.11",
    "openpyxl>=3.1.0",
    "weasyprint>=60.0",
    "pdfkit>=1.0.0",
]

[project.optional-dependencies]
gui = [
    "PyQt6>=6.5.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
all = [
    "smart-pdf-toolkit[gui,dev,docs]"
]

[project.urls]
Homepage = "https://github.com/siva4it/smart-pdf-toolkit"
Documentation = "https://smart-pdf-toolkit.readthedocs.io"
Repository = "https://github.com/siva4it/smart-pdf-toolkit"
Issues = "https://github.com/siva4it/smart-pdf-toolkit/issues"
Changelog = "https://github.com/siva4it/smart-pdf-toolkit/blob/main/CHANGELOG.md"

[project.scripts]
smart-pdf = "smart_pdf_toolkit.cli.main:main"
smart-pdf-api = "smart_pdf_toolkit.api.main:main"
smart-pdf-gui = "smart_pdf_toolkit.gui.app:main"

[project.entry-points."smart_pdf_toolkit.plugins"]
# Plugin entry points will be registered here

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["smart_pdf_toolkit*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
smart_pdf_toolkit = [
    "*.yaml",
    "*.json",
    "*.txt",
    "data/*",
    "templates/*",
    "static/*"
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fitz.*",
    "pdfplumber.*",
    "pytesseract.*",
    "langdetect.*",
    "transformers.*",
    "openai.*",
    "weasyprint.*",
    "pdfkit.*"
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "cli: marks tests as CLI tests",
    "gui: marks tests as GUI tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/smart_pdf_toolkit"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"